_type: export
__export_format: 4
__export_date: 2023-10-03T20:28:40.416Z
__export_source: insomnia.desktop.app:v2023.2.2
resources:
  - _id: req_a38bcb87828248be81727f67aa77c72e
    parentId: fld_3602810d10f0453e90defc00cd2f8d42
    modified: 1696364860570
    created: 1696364543216
    url: "{{ _.endpoint }}/api/books/uuuuuuuuuuuu"
    name: /
    description: ""
    method: POST
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1696363810472
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_3602810d10f0453e90defc00cd2f8d42
    parentId: fld_1736e667ed4b4a7f941af640168eff36
    modified: 1696364845563
    created: 1696364845563
    name: /{id}
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1696364845563
    _type: request_group
  - _id: fld_1736e667ed4b4a7f941af640168eff36
    parentId: fld_b7f3f4a08635472a9bb5c3eed3b91a06
    modified: 1696363515990
    created: 1696363515990
    name: /books
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1696363515990
    _type: request_group
  - _id: fld_b7f3f4a08635472a9bb5c3eed3b91a06
    parentId: wrk_2efaf124e7fb402184ff618609f3e13f
    modified: 1696363503281
    created: 1696363503281
    name: /api
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1696363503281
    _type: request_group
  - _id: wrk_2efaf124e7fb402184ff618609f3e13f
    parentId: null
    modified: 1696356040934
    created: 1696356040934
    name: backend-api-specs.yaml
    description: ""
    scope: design
    _type: workspace
  - _id: req_4b0aa1bed7f847fdb3513ca4a4e6bff2
    parentId: fld_3602810d10f0453e90defc00cd2f8d42
    modified: 1696364863665
    created: 1696364576442
    url: "{{ _.endpoint }}/api/books/uuuuuuuuuuuuuuu"
    name: /
    description: ""
    method: PUT
    body:
      mimeType: application/json
      text: |
        {
        	"book": "",
        	"image": ""
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication:
      type: bearer
      token: "{% response 'body', 'req_48572913dc18499b93e201ca0ff4ab82',
        'b64::JC50b2tlbg==::46b', 'when-expired', 60 %}"
    metaSortKey: -1696363810422
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_a9ee0ecd68d049a7a2cd7d85cb01b370
    parentId: fld_3602810d10f0453e90defc00cd2f8d42
    modified: 1696364866380
    created: 1696364599621
    url: "{{ _.endpoint }}/api/books/uuuuuuuuuuuuuuu"
    name: /
    description: ""
    method: DELETE
    body: {}
    parameters: []
    headers: []
    authentication:
      type: bearer
      token: "{% response 'body', 'req_48572913dc18499b93e201ca0ff4ab82',
        'b64::JC50b2tlbg==::46b', 'when-expired', 60 %}"
    metaSortKey: -1696363810372
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_3f4c55bdde2a40eda76a12c2148b49e4
    parentId: fld_3602810d10f0453e90defc00cd2f8d42
    modified: 1696364870385
    created: 1696364667804
    url: "{{ _.endpoint }}/api/books/uuuuuuuuuuuu"
    name: /rating
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
        	"userId": "",
        	"rating": 4
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication:
      type: bearer
      token: "{% response 'body', 'req_48572913dc18499b93e201ca0ff4ab82',
        'b64::JC50b2tlbg==::46b', 'when-expired', 60 %}"
    metaSortKey: -1696363810322
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_51c71426f41d4ec98567fa5f3a5ce0e5
    parentId: fld_1736e667ed4b4a7f941af640168eff36
    modified: 1696364485948
    created: 1696363975166
    url: "{{ _.endpoint }}/api/books"
    name: /
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1696363975166
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_ba242f900bd841cd8e8114290cf110f8
    parentId: fld_1736e667ed4b4a7f941af640168eff36
    modified: 1696364507606
    created: 1696364468261
    url: "{{ _.endpoint }}/api/books"
    name: /
    description: ""
    method: POST
    body:
      mimeType: application/json
      text: |
        {
        	"book": "",
        	"image": ""
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication:
      type: bearer
      token: "{% response 'body', 'req_48572913dc18499b93e201ca0ff4ab82',
        'b64::JC50b2tlbg==::46b', 'when-expired', 60 %}"
    metaSortKey: -1696363865370
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_1993e0a307e242788f78cb78683a518f
    parentId: fld_1736e667ed4b4a7f941af640168eff36
    modified: 1696364656441
    created: 1696364631933
    url: "{{ _.endpoint }}/api/books/bestrating"
    name: /bestrating
    description: ""
    method: GET
    body: {}
    parameters: []
    headers: []
    authentication: {}
    metaSortKey: -1696363782948
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: req_48572913dc18499b93e201ca0ff4ab82
    parentId: fld_912f972e40e94f01b660e65fcf591174
    modified: 1696364441637
    created: 1696363755574
    url: "{{ _.endpoint }}/api/auth/login"
    name: /login
    description: ""
    method: GET
    body:
      mimeType: application/json
      text: |-
        {
        	"email": "{{ _.credentials[0].email }}",
        	"password": "{{ _.credentials[0].password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1696363755574
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: fld_912f972e40e94f01b660e65fcf591174
    parentId: fld_b7f3f4a08635472a9bb5c3eed3b91a06
    modified: 1696363510561
    created: 1696363510561
    name: /auth
    description: ""
    environment: {}
    environmentPropertyOrder: null
    metaSortKey: -1696363510562
    _type: request_group
  - _id: req_c349aad668f442759657372fe55ecce5
    parentId: fld_912f972e40e94f01b660e65fcf591174
    modified: 1696363899217
    created: 1696363518610
    url: "{{ _.endpoint }}/api/auth/signup"
    name: /signup
    description: ""
    method: GET
    body:
      mimeType: application/json
      text: |-
        {
        	"email": "{{ _.credentials[0].email }}",
        	"password": "{{ _.credentials[0].password }}"
        }
    parameters: []
    headers:
      - name: Content-Type
        value: application/json
    authentication: {}
    metaSortKey: -1696363518610
    isPrivate: false
    settingStoreCookies: true
    settingSendCookies: true
    settingDisableRenderRequestBody: false
    settingEncodeUrl: true
    settingRebuildPath: true
    settingFollowRedirects: global
    _type: request
  - _id: env_54a36584984245cb887899e8ba7218830a558fdf
    parentId: wrk_2efaf124e7fb402184ff618609f3e13f
    modified: 1696363856488
    created: 1696356040937
    name: Base Environment
    data:
      endpoint: ""
      credentials:
        - email: ""
          password: ""
    dataPropertyOrder:
      "&":
        - endpoint
        - credentials
      "&~|credentials~|0":
        - email
        - password
    color: null
    isPrivate: false
    metaSortKey: 1696356040937
    _type: environment
  - _id: jar_54a36584984245cb887899e8ba7218830a558fdf
    parentId: wrk_2efaf124e7fb402184ff618609f3e13f
    modified: 1696356040938
    created: 1696356040938
    name: Default Jar
    cookies: []
    _type: cookie_jar
  - _id: spc_47ed33ace0264972a24752ac655fbab7
    parentId: wrk_2efaf124e7fb402184ff618609f3e13f
    modified: 1696364379953
    created: 1696356098441
    fileName: backend-api-specs.yaml
    contents: |
      openapi: 3.0.0

      info:
        description: "[OC P7] API backend pour le site Mon Vieux Grimoire"
        version: 1.0.2
        title: Mon Vieux Grimoire
        termsOfService: http://swagger.io/terms/
        contact:
          email: lpb.brigitte@gmail.com
        license:
          name: Apache 2.0
          url: http://www.apache.org/licenses/LICENSE-2.0.html

      tags:
        - name: auth
          description: Endpoints for user sign in and in
        - name: books
          description: Endpoints for retrieving and modifying books

      paths:
        /api/auth/signup:
          post:
            tags:
              - auth
            description: "Add a new user"
            requestBody:
              $ref: "#/components/requestBodies/UserLogin"
            responses:
              "200":
                $ref: "#/components/responses/OkResponse"

        /api/auth/login:
          post:
            tags:
              - auth
            description: "Login a user and send a connection token"
            requestBody:
              $ref: "#/components/requestBodies/UserLogin"
            responses:
              "200":
                description: return User connection information
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/User"

        /api/books:
          get:
            tags:
              - books
            description: Get a list of books
            responses:
              "200":
                $ref: "#/components/responses/BookListRespones"
          post:
            tags:
              - books
            description: Create a new book, must be logged on
            security:
              - bearerAuth: []
            responses:
              "200":
                $ref: "#/components/responses/OkResponse"

        /api/books/{id}:
          parameters:
            - name: id
              in: path
              description: ID of the book
              required: true
              schema:
                type: string
                format: uuid
          get:
            tags:
              - books
            description: Retrieve a book by it's id
            responses:
              "200":
                $ref: "#/components/responses/BookRetrieveResponse"
          put:
            tags:
              - books
            description: Update a book by it's id
            security:
              - bearerAuth: []
            requestBody:
              $ref: "#/components/requestBodies/BookRequest"
            responses:
              "200":
                $ref: "#/components/responses/OkResponse "
          delete:
            tags:
              - books
            description: Remove a book by it's id
            security:
              - bearerAuth: []
            responses:
              "200":
                $ref: "#/components/responses/OkResponse"

        /api/books/{id}/rating:
          post:
            tags:
              - books
            description: Add a rating to a book
            security:
              - bearerAuth: []
            responses:
              "200":
                $ref: "#/components/requestBodies/UserRatingRequest"

        /api/books/bestrating:
          get:
            tags:
              - books
            description: Return top 3 best books
            responses:
              "200":
                $ref: "#/components/responses/BookListRespones"

      servers:
        - url: https://petstore.swagger.io/v2

      components:
        securitySchemes:
          BearerAuth:
            type: http
            scheme: bearer

        requestBodies:
          UserLogin:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/User"
            description: User object for login
            required: true

          BookRequest:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Book"
            description: Book object for creation and update
            required: true

          UserRatingRequest:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    userId:
                      type: string
                      format: uuid
                      readOnly: true
                    rating:
                      $ref: "#/components/schemas/Rating"
            description: Rating body for a book
            required: true

        responses:
          BookListRespones:
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Book"
            description: List of books

          BookRetrieveResponse:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Book"
            description: Retrieve a single book

          OkResponse:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
            description: Ok message for a 200

        schemas:
          Book:
            type: object
            properties:
              book:
                type: string
              image:
                type: string
                format: url

          User:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                writeOnly: true
              password:
                type: string
                format: password
                writeOnly: true
              userId:
                type: string
                format: uuid
                readOnly: true
              token:
                type: string
                format: token
                readOnly: true

          Rating:
            type: integer
            minimum: 0
            maximum: 5
    contentType: yaml
    _type: api_spec
  - _id: env_b678b287a3ef40c7a40a719e795ef9c5
    parentId: env_54a36584984245cb887899e8ba7218830a558fdf
    modified: 1696363847691
    created: 1696363416263
    name: Localhost
    data:
      endpoint: http://localhost:3000
      credentials:
        - email: ""
          password: ""
    dataPropertyOrder:
      "&":
        - endpoint
        - credentials
      "&~|credentials~|0":
        - email
        - password
    color: null
    isPrivate: false
    metaSortKey: 1696363416263
    _type: environment
